name: Terragrunt

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  TF_VERSION: '1.9.8'
  TG_VERSION: '0.68.0'
  TG_DIR: 'infrastructure/live/development/vpc'
  AWS_REGION: 'eu-central-1'
  AWS_ROLE_DURATION: 3600

jobs:
  terragrunt:
    runs-on: ubuntu-latest
    environment: development
    strategy:
      matrix:
        tg_dir: ['infrastructure/live/development/vpc']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE_NAME }}
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: ${{ env.AWS_ROLE_DURATION }}

      - name: Verify AWS identity
        run: aws sts get-caller-identity

      - name: Terragrunt init
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.TF_VERSION }}
          tg_version: ${{ env.TG_VERSION }}
          tg_dir: ${{ matrix.tg_dir }}
          tg_command: init

      - name: Terragrunt validate
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.TF_VERSION }}
          tg_version: ${{ env.TG_VERSION }}
          tg_dir: ${{ matrix.tg_dir }}
          tg_command: validate

      - name: Terragrunt plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.TF_VERSION }}
          tg_version: ${{ env.TG_VERSION }}
          tg_dir: ${{ matrix.tg_dir }}
          tg_command: plan -out=tfplan

      - name: Upload Terraform plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.tg_dir }}
          path: ${{ matrix.tg_dir }}/tfplan